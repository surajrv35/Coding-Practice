class Solution {
    public int firstUniqChar(String s) {
        //two pass solution
//         if(s.length() == 0)
//             return -1;
        
//         int[] count=new int[26];
//         int index=-1;
//         for(int i=0;i<s.length();i++) {
//             count[s.charAt(i)-'a']++;
//         }
//         for(int i=0;i<s.length();i++) {
//             if(count[s.charAt(i)-'a']==1) {
//                 index=i;
//                 break;
//             }
//         }
//         return index;
        
       //1 pass solution
        HashMap<Character, Integer> map = new HashMap<>();
        for(int i=0;i<s.length();i++) {
            if(!map.containsKey(s.charAt(i))) {
                map.put(s.charAt(i), i);
            } else {
                map.put(s.charAt(i), -1);
            }
        }
        
        int min=Integer.MAX_VALUE;
        for(char c : map.keySet()) {
            if(map.get(c) > -1 && map.get(c)<min) {
                min=map.get(c);
            }
        }
        return min==Integer.MAX_VALUE?-1:min;
    }
}
