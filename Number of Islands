class Solution {
    public int numIslands(char[][] grid) {
        if(grid.length == 0) return 0;
        int m=grid.length;
        int n=grid[0].length;
        int count=0;
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++) {
                if(grid[i][j] == '1') {
                    DFSMarking(grid, i, j);
                    count++;
                }
            }
        }
        return count;
    }
    private void DFSMarking(char[][] grid, int i, int j) {
        if(i<0 || j<0 || i > grid.length-1 || j > grid[0].length-1 || grid[i][j] != '1') return;
        grid[i][j]='0';
        DFSMarking(grid, i-1, j);
        DFSMarking(grid, i+1, j);
        DFSMarking(grid, i, j-1);
        DFSMarking(grid, i, j+1);
    }   
}
